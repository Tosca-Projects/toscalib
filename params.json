{"name":"Toscalib","tagline":"A go implementation of the TOSCA Yaml specifications","body":"# Abstract\r\n\r\nThis library is an implementation of the TOSCA definition as described in the document written in pure GO\r\n[TOSCA Simple Profile in YAML Version 1.0](http://docs.oasis-open.org/tosca/TOSCA-Simple-Profile-YAML/v1.0/csd03/TOSCA-Simple-Profile-YAML-v1.0-csd03.html)\r\n\r\n# How to\r\nSee the test files for example but most likely what you will do is:\r\n- importing the library in your code\r\n- Read a tosca yaml file as a byte array\r\n- unmarshal the yaml document into the structure definied in this library\r\n- play with it:\r\n```go\r\nimport \"github.com/owulveryck/toscalib\"\r\n...\r\nmystruct := TopologyTemplateStruct{}\r\n\r\nerr := yaml.Unmarshal([]byte(topologyExample), &mystruct)\r\nif err != nil {\r\n    t.Errorf(\"error: %v\", err)\r\n}\r\nlog.Printf(\"--- Result of the marshal:\\n%v\\n\\n\", mystruct)\r\n\r\nd, err := yaml.Marshal(&mystruct)\r\nif err != nil {\r\n    t.Errorf(\"error: %v\", err)\r\n}\r\nlog.Printf(\"%s\\n\\n\", string(d))\r\n\r\n```\r\n\r\nand then simply `go get github.com/owulveryck/toscalib`\r\n\r\n# Test\r\nI try as much as possible to develop some tests that may be run with `go test`.\r\n \r\n# API\r\n[![GoDoc](https://godoc.org/github.com/owulveryck/toscalib?status.svg)](https://godoc.org/github.com/owulveryck/toscalib)\r\n\r\n# Future\r\nThis library may be used to:\r\n- create a TOSCA orchestrator\r\n- create a view tool that display the dependency diagram of a TOSCA file\r\n- implement a plugin for well known orchestrators such as [openstack](https://www.openstack.org/) or [cloudify](http://getcloudify.org/)\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}